@page "/stamtræ"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Stamtræ</PageTitle>

<section class="familyTreeContainer" id="familyTree">
    <Table id="tableFamilyTree">
        <TableHeader>
            <TableRow class="tableRow">
                <TableHeaderCell>Navn</TableHeaderCell>
                <TableHeaderCell>Arveklasse</TableHeaderCell>
                <TableHeaderCell></TableHeaderCell>
            </TableRow>
        </TableHeader>

        <TableBody>
            @foreach (Inheritor inheritor in inheritors) {
                <TableRow>
                    <TableRowCell class="align-middle">@inheritor.Name</TableRowCell>
                    <TableRowCell class="align-middle">@((int)inheritor.ArveKlasse)</TableRowCell>
                    <TableRowCell class="col-1 align-middle">
                        <Button @onclick="() => UpdateInheritor(inheritor.Id)"><Icon Name="IconName.Pen"/></Button>
                        <Button @onclick="() => DeleteInheritor(inheritor.Id)"><Icon Name="IconName.Delete" style="color: #cf0000"/></Button>
                    </TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
</section>


<!-- Vis personligt tilknyttet arv og aktiver - modul -->

<dialog id="showAssignedAssets">
    <section>
        <a>Navn</a>
        <a>Arveklasse</a>
    </section>
    <section>
        <ul id="listOfPersonalAssets">
        </ul>    
    </section>
    <button>Tilføj aktiv</button>   
</dialog>

<!-- Tilføj aktiv til person - form -->

<form hidden method="post" id="addPersonalAsset">

    <a>Navn</a>

    <label for="asset">Aktiv</label><br>
    <input type="text" id="asset" name="asset"><br><br>

    <button type="submit">Tilføj aktiv til person</button> 
</form>

<!-- Tilføj arving -->

<AddInheritor @bind-Inheritors=inheritors/>


@code {

    private List<Inheritor> inheritors = InheritorRepository.GetInheritors();

    private Inheritor newInheritor = new Inheritor();

    private int nextId => inheritors.Any() ? inheritors.Max(i => i.Id) + 1 : 0;

    private void Submit()
    {

        newInheritor.Id = nextId;

        inheritors.Add(newInheritor);

        // Ryd formen
        newInheritor = new Inheritor();
    }


    private void DeleteInheritor(int inheritorId)
    {
        Inheritor inheritorToRemove = inheritors.FirstOrDefault(i => i.Id == inheritorId);
        if (inheritorToRemove != null)
        {
            inheritors.Remove(inheritorToRemove);
        }

        StateHasChanged();
    }

    private void UpdateInheritor(int inheritorId) 
    {
        NavigationManager.NavigateTo($"edit-inheritor/{inheritorId}");
    }
}


